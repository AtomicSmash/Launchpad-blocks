(function(c,o){if(typeof exports=="object"&&typeof module=="object")module.exports=o();else if(typeof define=="function"&&define.amd)define([],o);else{var n=o();for(var l in n)(typeof exports=="object"?exports:c)[l]=n[l]}})(globalThis,()=>(()=>{"use strict";var i={};i.n=a=>{var e=a&&a.__esModule?()=>a.default:()=>a;return i.d(e,{a:e}),e},i.d=(a,e)=>{for(var t in e)i.o(e,t)&&!i.o(a,t)&&Object.defineProperty(a,t,{enumerable:!0,get:e[t]})},i.o=(a,e)=>Object.prototype.hasOwnProperty.call(a,e);var c={};const o=window.wp.domReady;var n=i.n(o);class l{tabsGroupId;tabsGroup;tabsList;tabTriggers;tabPanels;constructor(e){this.tabsGroup=e;const t=this.tabsGroup.dataset.tabsGroupId;if(!t)throw new Error("Unable to find the tabs group id for the tabs group.");this.tabsGroupId=t;const r=this.tabsGroup.querySelector('div[role="tablist"]');if(!r)throw new Error("Unable to find the tabs list element in a tabs group.");this.tabsList=r;const s=this.tabsList.querySelectorAll('a[role="tab"]');if(!s)throw new Error("Unable to find the tab trigger elements in a tabs group.");this.tabTriggers=Array.from(s);const b=this.tabsGroup.querySelectorAll('section[role="tabpanel"]');if(!b)throw new Error("Unable to find the tab panel elements in a tabs group.");this.tabPanels=Array.from(b),this.initialiseTabGroup()}initialiseTabGroup(){this.improveKeyboardNavigationOfTabs(),this.preventPageReloadOnTabSelection()}improveKeyboardNavigationOfTabs(){this.tabTriggers.forEach((e,t)=>{e.ariaSelected?.toLowerCase()!=="true"&&(e.tabIndex=-1),e.addEventListener("keydown",r=>{switch(r.key){case"ArrowLeft":{t===0?this.tabTriggers.at(-1)?.focus():this.tabTriggers.at(t-1)?.focus();break}case"ArrowRight":{t===this.tabTriggers.length-1?this.tabTriggers.at(0)?.focus():this.tabTriggers.at(t+1)?.focus();break}case" ":r.preventDefault(),this.clickTab(e)}})})}clickTab(e){const t=e.getAttribute("aria-controls");if(!t)throw new Error("Can't find the ID of the panel to switch to.");this.swapActiveTab(t),this.swapActivePanel(t),this.updateUrlBar(t)}preventPageReloadOnTabSelection(){this.tabTriggers.forEach(e=>{e.addEventListener("click",t=>{t.preventDefault(),this.clickTab(e)})})}swapActiveTab(e){const t=this.tabTriggers.find(s=>s.ariaSelected==="true"),r=this.tabTriggers.find(s=>s.getAttribute("aria-controls")===e);if(!r)throw new Error("Failed to find the tab to be activated.");t&&(t.ariaSelected="false",t.tabIndex=-1),r.ariaSelected="true",r.removeAttribute("tabindex")}swapActivePanel(e){const t=this.tabPanels.find(s=>s.classList.contains("is-selected")),r=this.tabPanels.find(s=>s.id===e);if(!r)throw new Error("Failed to find the panel to be activated.");t&&t.classList.remove("is-selected"),r.classList.add("is-selected")}updateUrlBar(e){const t=new URL(window.location.href);t.searchParams.set(`tabs_${this.tabsGroupId}`,e),window.history.replaceState(window.history.state,"",`${t.pathname}${t.search}${t.hash}`)}}return n()(()=>{const a=document.querySelectorAll("[data-launchpad-tabs-group]");for(const e of a)new l(e)}),c})());
